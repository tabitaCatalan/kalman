var documenterSearchIndex = {"docs":
[{"location":"observers.html#Observadores-del-sistema-real:-Observers","page":"Observers","title":"Observadores del sistema real: Observers","text":"","category":"section"},{"location":"observers.html","page":"Observers","title":"Observers","text":"El tipo abstracto KalmanObserver está pensado como una interfaz a las estructuras que permitan observar el sistema real en estado x_n, entregando una observación y_n. Se espera que sean, o bien lineales de la forma","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"y_n = H_n x_n + D_n u_n + G_n N_n","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"o bien, en caso de ser no lineales y_n = mathcalH(x_n u_n), que puedan ser linealizados a la forma anterior. ","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"Lo que observer debería ofrecer ","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"Observar un sistema, es decir, entregar una observación y_n a partir de un estado x_n.\nObserver DEBE ser linearizable, eso implica que debe poder verse como H_n x_n + D_n u_n + G_n N_n. Esto es necesario para calcular la matriz de ganancia. \nSe debe poder usar para observar el sistema aproximado hatx_n to haty_n. Esto significa que debe poder evaluarse (ob::KalmanObserver)(x, u, error).","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"Se espera que tengan la siguiente interfaz (los métodos opcionales deberían implementarse dejándose en blanco):","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"Métodos a implementar Breve descripción\nHn, Dn, Gn las matrices/vectores H D G respectivamente. Por ahora serán constantes.\n(ob::KalmanObserver)(x::AbstractArray, u::Real, error) Este método permite evaluar el KalmanObserver en un estado x. Se usa para hacer una observación del sistema aproximado, evaluando en hatx_n y el control u_n para devolver una observación haty_n.","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"En general los constructores pedirán además una función de integridad; cuya idea es evitar que las observaciones entreguen resultados sin sentido físico, transformándolas para dejarlas dentro de cierto dominio. Por ejemplo, si trabajamos con EDOs epidemiológicas, y nuestras observaciones corresponden al número de infectados, no tiene sentido que este sea un valor negativo, por lo que podría usarse la función de integridad (y) -> max.(y, 0.), que transforma un vector de observaciones y, dejando en 0 las coordenadas negativas.","category":"page"},{"location":"observers.html#LinearObserver","page":"Observers","title":"LinearObserver","text":"","category":"section"},{"location":"observers.html","page":"Observers","title":"Observers","text":"Una estructura sencilla que implementa todos los métodos anteriores es LinearObserver.","category":"page"},{"location":"observers.html","page":"Observers","title":"Observers","text":"KalmanFilter.LinearObserver","category":"page"},{"location":"observers.html#KalmanFilter.LinearObserver","page":"Observers","title":"KalmanFilter.LinearObserver","text":"struct LinearObserver <: KalmanFilter.KalmanObserver\n\nRepresenta un observador lineal simple de la forma\n\ny_n = H x_n + D u_n + G_n N_n\n\nde un estado interno x.\n\nCampos\n\nH::AbstractArray{T,2} where T\nD::AbstractArray{T,1} where T\nG::AbstractArray{T,1} where T\nintegrity::Any\nFunción que recibe una observación y y la corrige para dar valores razonables. Por ejemplo, para el caso de observar un sistema epidemiológico, no tiene sentido que una variable sea negativa. Se podría definir integrity(y) = max.(y,0.).\n\n\n\n\n\n","category":"type"},{"location":"updaters.html#Actualizar-el-sistema:-KalmanUpdater","page":"Updaters","title":"Actualizar el sistema: KalmanUpdater","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"El tipo abstracto KalmanUpdater está pensado como una interfaz a las estructuras que permitan actualizar el sistema desde un estado x_n a un estado x_n+1.","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Para que funciones correctamente deben implementarse los siguientes métodos:","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Métodos a implementar Breve descripción\nupdate!(L::KalmanUpdater, hatx, hatP, control, t) un método que permita actualizar al iterador y dejarlo listo para la siguiente iteración. Cuando se usan matrices M_n = M B_n = B F_n= F contantes se puede dejar en blanco, pero debería usarse, por ejemplo, para linearlizar en torno a hatx_n cuando se usa un KalmanUpdater no lineal.\nforecast(updater::KalmanUpdater, hatx, hatP, control, t) Devuelve una tupla que contiene a hatx_n+1 n hatP_n+1 n a partir de hatx_nn(hatx), hatP_nn(hatP) y un control.\ndt(updater::KalmanUpdater) Delta t","category":"page"},{"location":"updaters.html#LinearizableUpdater","page":"Updaters","title":"LinearizableUpdater","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Un grupo importante de KalmanUpdaters serán los que, o bien son lineales de la forma","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"x_n+1 = M_n x_n + B_n u_n + F_n N_n","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"(donde M_n F_n son matrices, x_n N_n B_n vectores y u_n es un control escalar), o bien, en caso de ser no lineales x_n+1 = mathcalM(x_n u_n), pueden ser linealizados a la forma anterior.","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Los miembros de esta clase necesitan implementar: ","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Métodos a implementar Breve descripción\nMn, Bn, Fn De la linearización en el estado actual","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Los miembros de esta clase tienen automáticamente definidos los métodos:","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"forecast(updater::LinearizableUpdater, hatx, hatP, control, t)\r\nforecast_with_error(updater::LinearizableUpdater, hatx, hatP, control, t)\r\nforecast_hatP(updater::LinearizableUpdater, hatP)","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"info: Forecast con error\nPara usar EnKF<!–TODO: agregar referencia a EnKF–> es necesario que el KalmanUpdater usado tenga implementado forecast_with_error. Esto permite hacer un paso de forecast e incluir error.","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Cuentan además con las siguientes funciones","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"KalmanFilter.dimensions","category":"page"},{"location":"updaters.html#KalmanFilter.dimensions","page":"Updaters","title":"KalmanFilter.dimensions","text":"dimensions(updater::KalmanFilter.LinearizableUpdater) -> Any\n\n\nDevuelve el número de dimensiones que puede soportar el LinearizableUpdater en el estado. \n\n\n\n\n\ndimensions(observer::KalmanFilter.KalmanObserver) -> Any\n\n\nDevuelve el número de dimensiones que puede soportar el LinearizableUpdater en el estado. \n\n\n\n\n\n","category":"function"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"KalmanFilter.noiser","category":"page"},{"location":"updaters.html#KalmanFilter.noiser","page":"Updaters","title":"KalmanFilter.noiser","text":"noiser(updater::KalmanFilter.LinearizableUpdater) -> Any\n\n\nDevuelve una distribución normal multivariada mathcalN(0 Q),  donde Q es la matriz de covarianzas del LinearizableUpdater.\n\n\n\n\n\n","category":"function"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"los KalmanUpdaters de este tipo implementados son:","category":"page"},{"location":"updaters.html#SimpleLinearUpdater","page":"Updaters","title":"SimpleLinearUpdater","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"SimpleLinearUpdater","category":"page"},{"location":"updaters.html#KalmanFilter.SimpleLinearUpdater","page":"Updaters","title":"KalmanFilter.SimpleLinearUpdater","text":"struct SimpleLinearUpdater{T} <: KalmanFilter.LinearizableUpdater\n\nDefine un actualizador lineal constante.\n\nDefine un actualizador lineal del sistema, que permite calcular el estado x_n+1 a partir del estado x_n y un control escalar u_n según\n\nx_n+1 = M x_n + B u_n + F N_n\n\ndonde N_n es un número aleatorio (dado por una variable aleatorio normal mathcalN(01)).\n\nCampos\n\nM::AbstractArray{T,2} where T\nMatriz M\nB::AbstractArray{T,1} where T\nVector B\nF::AbstractArray{T,2} where T\nMatriz F\nQ::AbstractArray{T,2} where T\nMatriz Q de covarianzas del error\ndt::Any\nDelta t\nintegrity::Any\nFunción que corrige x para dejarlo dentro de un dominio.\n\n\n\n\n\n","category":"type"},{"location":"updaters.html#NLUpdater","page":"Updaters","title":"NLUpdater","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"NLUpdater","category":"page"},{"location":"updaters.html#KalmanFilter.NLUpdater","page":"Updaters","title":"KalmanFilter.NLUpdater","text":"mutable struct NLUpdater <: KalmanFilter.LinearizableUpdater\n\nDefine un actualizador dado por la discretización de una ODE.\n\nDefine un actualizador posiblemente no lineal del sistema, a partir de la discretización de una Ecuación Diferencial Ordinaria. Esto permite calcular el estado x_n+1 a partir del estado x_n y el control u_n según\n\nx_n+1 = mathcalM(x_n u_n) + F N_n\n\ndonde N_n es un número aleatorio (dado por una variable aleatorio normal mathcalN(0Q)) y mathcalM está dada por un Discretizer.\n\nEn todo tiempo guarda una versión linealizada del sistema, en torno a un punto  x_n u_n t_n (al construirlo se le deben dar esos valores también.)\n\n\n\n\n\n","category":"type"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Ambas estructuras pueden ser además evaluadas en la firma (::KalmanUpdater)(x::AbstractArray, u::Real, error). Por ejemplo, para el caso no lineal, nlupdater(x,u,ε) devuelve mathcalM(xu) + Fε.","category":"page"},{"location":"updaters.html#Otros-KalmanUpdaters-implementados","page":"Updaters","title":"Otros KalmanUpdaters implementados","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Un actualizador importante es ODEForecaster, que ofrece un enfoque alternativo para trabajar con ecuaciones diferenciales estocásticas de la forma ","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"x(t) = F(x t)dt + G(x t)dW(t)","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Este método se llama Filtro de Kalman Continuo Discreto, y es muy similar al Filtro de Kalman Extendido, pero el paso de forecast se hace resolviendo una ecuación diferencial acoplada, la Ecuación de los Momentos, para hatx y hatP:","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"beginaligned\r\nhatx(t) = F(hatxt)  \r\nhatP(t) = partial_hatx F(hatx t) hatP + hatP left( partial_hatx F(hatx t) right) ^top + G(t)Q(t)G(t)\r\nendaligned","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"De esta forma, para obtener hatx_n+1n hatP_n+1n basta con resolver la ecuación de los momentos en t_n t_n+1, con condiciones iniciales hatx_n+1n hatP_n+1n.","category":"page"},{"location":"updaters.html#ODEForecaster","page":"Updaters","title":"ODEForecaster","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"KalmanFilter.ODEForecaster","category":"page"},{"location":"updaters.html#KalmanFilter.ODEForecaster","page":"Updaters","title":"KalmanFilter.ODEForecaster","text":"Outer constructor\n\n\n\n\n\n","category":"type"},{"location":"updaters.html#Consideraciones-adicionales","page":"Updaters","title":"Consideraciones adicionales","text":"","category":"section"},{"location":"updaters.html#Función-de-integridad","page":"Updaters","title":"Función de integridad","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"En general los constructores pedirán además una función de integridad; cuya idea es evitar que los estados se salgan de cierto dominio. Por ejemplo, para el caso en que trabajamos con EDOs epidemiológicas, es necesario que las cantidades sean no negativas, por lo que se usa la función de integridad (x) -> max.(x, 0.), que transforma un vector x para dejar en 0 las coordenadas negativas.","category":"page"},{"location":"updaters.html#update_inner_system-y-update_aproximation","page":"Updaters","title":"update_inner_system y update_aproximation","text":"","category":"section"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"Aún no está definida del todo la interfaz de KalmanUpdater, y varias estructuras implementan estos dos métodos.  ","category":"page"},{"location":"updaters.html","page":"Updaters","title":"Updaters","text":"CREO que ya ni siquiera es necesaria la distinción, pues venía del hecho de que KalmanIterator manejaba los ruidos, cosa que ahora hace KalmanUpdater. En todo caso, ciertos actualizadores como ODEForecaster no tienen definido un método update_inner_system porque no están pensados para hacer eso (solo deberían usarse con Measurements, no con InnerStates). Es necesario implementar holy traits o algo así para diferenciar mejor los métodos que deben implementarse.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"EditURL = \"<unknown>/../modelo_seii_input_desconocido.jl\"","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html#Filtro-de-Kalman-Extendido-con-input-desconocido","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"","category":"section"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"using KalmanFilter\nusing Plots","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html#Modelo-epidemiológico-SEII","page":"Filtro de Kalman Extendido con input desconocido","title":"Modelo epidemiológico SEII","text":"","category":"section"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"El modelo permite modelar el desarrollo de una enfermedad regida por la siguiente dinámica:","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"beginaligned\nS = - alpha(t) S (E + I^m) \nE = alpha(t) S (E + I^m) - gamma_E E \n(I^m) = (1-varphi) gamma_E E - gamma_I I^m \nI = varphi gamma_E E - gamma_I I\n(cI) = varphi gamma_E E\nendaligned","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"donde","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"S representa a los susceptibles, las personas que podrían contagiarse.\nE corresponde a los que han sido expuestos al virus y lo están incubando.\nI^m denota a los infectados mild, que tienen síntomas leves o ninguno.\nI denota a los infectados sintomáticos.\ncI es el total de infectados sintomáticos acumulados (agregamos este valor porque es un dato con el que se cuenta del sistema real).","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Además la dinámica tiene los siguientes parámetros:","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"alpha(t) es la Tasa de contagio en tiempo t.\ngamma_E es Tasa de infección (paso de expuesto a infectado).\ngamma_I es la Tasa de remoción (dejar de estar infectado, ya sea por recuperación o muerte).\nvarphi es Proporción de personas sintomáticas.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Denotando mathbfx(t) = (S(t) E I^m I cI), el sistema es de la forma","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"mathbfx(t) = f(mathbfx(t) alpha(t) p)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"donde alpha(t) será un control y p representa a los otros parámetros. Guardamos la información de la dinámica en la función episystem_full(x, α, p).","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"function episystem_full(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α * β * x[1] * (x[2] + x[3]),\n  α * β * x[1] * (x[2] + x[3]) - γₑ * x[2],\n  (1 - φ) * γₑ * x[2] - γᵢ * x[3],\n  φ * γₑ * x[2] - γᵢ * x[4],\n  φ * γₑ * x[2]]\nend","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Vemos que este sistema es no lineal, por lo que para poder trabajarlo con el filtro de Kalman necesitaremos linearizarlo. Para eso será necesaria la información","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"D_x f(mathbfx alpha(t) p) =","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"function epijacobian_full_x(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α*β*(x[2] + x[3])  -α*β*x[1]     -α*β*x[1]  0.  0.;\n  α*β*(x[2] + x[3])  (α*β*x[1]-γₑ)  α*β*x[1]  0.  0.;\n  0.                 (1-φ)*γₑ       -γᵢ       0.  0.;\n  0.                 φ*γₑ           0.        -γᵢ 0.;\n  0.                 φ*γₑ           0.        0.  0.]\nend","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Puesto que consideraremos el input como desconocido, y la dinámica f es no lineal en ese input, también necesitaremos D_u f.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"function epijacobian_full_u(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-β*x[1]*(x[2] + x[3]),\n  β*x[1]*(x[2] + x[3]),\n  0.,\n  0.,\n  0.]\nend","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Definimos un vector de condiciones iniciales x_0.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"x0 = [7.112808e6, 1046.8508799517147, 0.0, 521.963080420307, 0.0]\nF = 100. * ones(5)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Solo consideraremos conocida la cantidad total de infectados mathbfx_5 = cI.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"H = [0. 0. 0. 0. 1.]","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Usaremos un error de unas 50.000 personas en las mediciones.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"G = [500.]\ndimensions = 5","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Definimos las matrices tildeH para nuestro sistema auxiliar, que incluirá al input.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"tildeH = [H 0.]\n\ntildeP = [F * F' zeros(5); zeros(5)' 1.]","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"EL nuevo vector de estados será tildemathbfx = beginpmatrix mathbfx_0  1 endpmatrix, donde estamos considerando una suposición inicial para el estado alpha = 1.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"tildex0 = [x0; 0.4]\n\ndt = 0.05\nT = 30.\nN = Int(T/dt)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Definimos los parámetros","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"γₑ = 0.14\nγᵢ = 1/14\nφ = 0.3","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Que agrupamos en una tupla p.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"p = (gammae = γₑ, gammai = γᵢ, phi = φ)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Usaremos un Discretizer RungeKutta de orden 4, diferenciable tanto en el estado x como en el control u. Lo construimos a partir de un discretizador solo diferenciable en x por comodidad.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"rkx = KalmanFilter.RK4Dx(episystem_full, epijacobian_full_x, p, dt)\nrk = KalmanFilter.RK4Du(rkx, epijacobian_full_u)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"El control para el sistema interno (que supondremos desconocido y es el que intentaremos averiguar) será la función constante por pedazos control_pieces.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"function control_pieces(t)\n    if t < 5.\n        1.\n    elseif t >= 5. && t < 12.\n        0.8\n    elseif t >= 12. && t < 25.\n        0.5\n    elseif t >= 25. && t < 40.\n        1.5\n    elseif t >= 40.\n        1.\n    end\nend","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Veamos un gráfico del control usado, para lo que definimos un vector con los tiempos ts.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"ts = 0.0:dt:(T-dt)\nplot(ts, control_pieces.(ts), label = \"Control real\")","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Definimos las estructuras necesarias para crear un LinearKalmanIterator.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"nlupdater = NLUpdater(rk,F,x0,0.4)\nnlaugmented = KalmanFilter.NLUpdaterUnknowInput(nlupdater, control_pieces, 1.)\nobserver = KalmanFilter.LinearObserver(tildeH, zeros(1), G)\nsystem = KalmanFilter.InnerState(tildex0)\niterator = KalmanFilter.LinearKalmanIterator(tildex0, tildeP, nlaugmented, observer, system, dt)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Y realizamos un total de N iteraciones, guardando los estamos intermedios en las variables que aparecen abajo.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"results, ensamble = KalmanFilter.full_iteration(iterator, dt, N, t -> 0., 1)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html#Resultados","page":"Filtro de Kalman Extendido con input desconocido","title":"Resultados","text":"","category":"section"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Graficaremos los estados internos considerados, y los resultados obtenidos.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Ahora podemos graficar los diferentes estados de nuestro sistema, así como las aproximaciones obtenidas con filtro de Kalman.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Susceptibles S","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(results, ts, 1)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Expuestos E","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(results, ts, 2)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Infectados asintomáticos mild I^m","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(results, ts, 3)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Infectados I","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(results, ts, 4)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Infectados acumulados cI, y las observaciones que hicimos de él.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(results, ts, 5)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Finalmente, veamos el control usado y el aproximado","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"plot(ts, control_pieces.(ts), label = \"Control real\")\nplot!(results, ts, 6)","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"Notamos que tras una cierta cantidad de tiempo es posible averiguar el control Aunque hay bastante incerteza de los resultados.","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"","category":"page"},{"location":"ejemplos/NLFilterUnknownInput.html","page":"Filtro de Kalman Extendido con input desconocido","title":"Filtro de Kalman Extendido con input desconocido","text":"This page was generated using Literate.jl.","category":"page"},{"location":"systems.html#Sistema-observables:-ObservableSystem","page":"Systems","title":"Sistema observables: ObservableSystem","text":"","category":"section"},{"location":"systems.html","page":"Systems","title":"Systems","text":"El tipo abstracto ObservableSystem está pensado como una interfaz que permite observar el sistema real.","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"El sistema real puede ser, o bien un estado interno o bien entregar simplemente mediciones obtenidas a partir de un sistema físico externo. En el primer caso ObservableSystem se encarga de almacenar y actualizar el estado x_n, y puede recibir un KalmanObserver para obtener observaciones y_n de él. En el segundo,  ObservableSystem solo cuenta con una lista de las mediciones y_n, las cuales supondremos que proceden de un sistema físico descrito por un KalmanUpdater y que fueron observadas por un KalmanUpdater que no seremos capaces de conocer directamente.","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"La interfaz requiere los siguientes métodos ","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"Métodos a implementar Breve descripción\nupdate_real_state!(system::ObservableSystem, updater::KalmanUpdater, control, error) Transforma el estado interno x_n en x_n+1, por medio de un KalmanUpdater. Puede usarse para actualizar el número de iteración n a n+1, para poder obtener, por ejemplo, una nueva medición la próxima vez que sea pedida.\nobserve_real_state(system::ObservableSystem, observer::KalmanObserver, control, error) Entrega una medición del estado real.","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"Los ObservableSystems que almacenen un estado interno pueden definir además los siguientes métodos.","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"Métodos opcionales Breve descripción\nget_inner_state(system::ObservableSystem) Devuelve un estado interno x_n\nset_inner_state(system::ObservableSystem, x) Setea el estado interno x_n a x.","category":"page"},{"location":"systems.html#InnerState","page":"Systems","title":"InnerState","text":"","category":"section"},{"location":"systems.html","page":"Systems","title":"Systems","text":"Un ObservableSystem que almacena un estado interno es InnerState. ","category":"page"},{"location":"systems.html","page":"Systems","title":"Systems","text":"KalmanFilter.InnerState","category":"page"},{"location":"systems.html#Measurements","page":"Systems","title":"Measurements","text":"","category":"section"},{"location":"systems.html","page":"Systems","title":"Systems","text":"KalmanFilter.Measurements","category":"page"},{"location":"discretizers.html#Discretizadores:-Discretizer","page":"Discretizers","title":"Discretizadores: Discretizer","text":"","category":"section"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"El tipo abstracto Discretizer está pensado como una interfaz a las estructuras que permitan trabajar con una Ecuación Diferencial Ordinaria autónoma (un sistema continuo) de la forma ","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"x(t) = f_p(x(t) alpha(t) t)","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"donde alpha es una función de t conocida, y transformarlo en uno discreto","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"x_n+1 = mathcalM_p(x_n alpha_n t_n)","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"El subíndice p denota la posible dependencia de  f de algunos parámetros. Esto se hace mediante métodos numéricos como Euler, Runge Kutta, etc.","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Para que funcione correctamente deben implementarse los siguientes métodos:","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Métodos a implementar Breve descripción\n(::Discretizer)(x::AbstractArray, α::Real, t) El método debe poder ser evaluado en un estado x, un control alpha y en tiempo t.\njacobian_x(ds::Discretizer, x, α, t) Debe contarse con la derivada con respecto al estado.\ndt(ds::Discretizer) Delta t para la discretización temporal.","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Usaremos Euler progresivo como un ejemplo de cómo implementar la interfaz. ","category":"page"},{"location":"discretizers.html#Ejemplo-de-implementación:-Método-Euler-progresivo","page":"Discretizers","title":"Ejemplo de implementación: Método Euler progresivo","text":"","category":"section"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Dada una condición inicial x(0) = x_0, y un paso de tiempo Delta t, definimos t_n+1 = t_n + Delta t. Denotamos alpha_n = alpha(t_n). Definimos la sucesión x_n _n, intentando que x_n approx x(t_n+1), mediante la recursión","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"x_n+1 = x_n + Delta t f_p(x_n alpha_n t_n) = mathcalM_p(x_n alpha_n t_n)","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Para definir el discretizador, usaremos además la información del diferencial con respecto a x de f_p, ya que esto es útil más adelante a la hora de definir un filtro de kalman extendido.","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"KalmanFilter.Euler","category":"page"},{"location":"discretizers.html#KalmanFilter.Euler","page":"Discretizers","title":"KalmanFilter.Euler","text":"struct Euler <: KalmanFilter.Discretizer\n\nDefine un Discretizer con el método de Euler progresivo.\n\nCampos\n\nf\nLa función tal que x = f(xalpha p t), donde x es el estado, alpha un control, p son parámetros extra y t es el tiempo.\n\nDxf\nD_x f (xalpha p t), el diferencial de f con respecto a x.\np\nParámetros extra p.\ndt\nTamaño del paso temporal Delta t, tal que t_n+1 = t_n + Delta t.\n\n\n\n\n\n","category":"type"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Esto permite definir los dos métodos necesarios de la interfaz ","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"(eu::Euler)(x, α, t) = x + eu.dt * eu.f(x, α , eu.p, t)","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"jacobian_x(eu::Euler, x, α, t) = I + eu.dt * eu.Dxf(x, α, eu.p, t)","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Donde I es la matriz identidad dada por el paquete LinearAlgebra.","category":"page"},{"location":"discretizers.html#Discretizers-disponibles","page":"Discretizers","title":"Discretizers disponibles","text":"","category":"section"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Discretizer Descripción\nEuler Método de Euler progresivo, que permite ser diferenciado c/r a la variable x.\nRK4Dx Método de Runge Kutta de orden 4, que permite ser diferenciado c/r a la variable x.","category":"page"},{"location":"discretizers.html","page":"Discretizers","title":"Discretizers","text":"Agregar constructores de todos los discretizers disponibles. <!– TODO –>","category":"page"},{"location":"iterators.html#Iteradores:-KalmanIterator","page":"Iterators","title":"Iteradores: KalmanIterator","text":"","category":"section"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"Un iterador debe contener la información de un paso del filtro de kalman. ","category":"page"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"La función next_iteration!(iterator::KalmanIterator, control) permite generar una nueva iteración, pero requiere que se implementen los siguientes métodos:","category":"page"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"Métodos a implementar Breve descripción\nupdate_inner_state!(iterator, control) Si el iterador guarda un estado interno x_n, este método debería actualizarlo a x_n+1. Si no (como cuando se está observando un sistema físico real del que solo se tienen mediciones), puede estar en blanco.\nforecast_observed_state!(iterator, control) Actualiza la estimación a priori de hatx_n+1n, usando el control u_n.\nobserve_inner_system(iterator) Entrega una observación y_n+1 del sistema real.\nanalyse!(iterator, observation) Analiza la observación y_n+1 para generar una nueva estimación a posteriori hatx_n+1n+1.\nupdate_updater!(iterator) Permite actualizar el updater luego de la iteración. Puede usarse por ejemplo, con un updater no lineal que debe ser linealizado tras cada iteración. Puede dejarse en blanco.","category":"page"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"Hay dos opciones disponibles ","category":"page"},{"location":"iterators.html#LinearKalmanIterator","page":"Iterators","title":"LinearKalmanIterator","text":"","category":"section"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"Permite realizar iterar con el filtro de Kalman de toda la vida.","category":"page"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"KalmanFilter.LinearKalmanIterator","category":"page"},{"location":"iterators.html#KalmanFilter.LinearKalmanIterator","page":"Iterators","title":"KalmanFilter.LinearKalmanIterator","text":"mutable struct LinearKalmanIterator{T} <: KalmanFilter.KalmanIterator\n\nDefine un iterator de Kalman que almacena tanto un estado interno (que corresponde al sistema real) como un sistema aproximado, el cual es ajustado a partir de observaciones del sistema interno.\n\nCampos\n\nn\nNúmero de iteración actual n. Se inicializa en 0.\nu\nControl u_n-1 usado para llegar al estado actual\nsystem\nSistema\nhatX\nAproximación del estado interno hatx_nn, y una estimación de la matriz de covarianzas hatP_nn del error x_n - hatx_nn.\n\nnext_hatX\nEstimación hatx_nn-1 del estado x_n antes de conocer la observación y_n (solo contando con información hasta y_n-1).\n\nupdater\nKalmanUpdater que permite actualizar tanto el estado interno como las aproximaciones.\nobserver\nUn observador lineal que entrega observaciones y_n del estado real.\n\nnoiser\nUna distribución que permite agregar ruido al sistema. Por defecto es una mathcalN(01).\nalpha\nParámetro alpha in 01 de un filtro paso bajo que permite eliminar las oscilaciones en el estado luego de hacer el análisis. Si alpha approx 1, entonces no se hace correción, si alpha approx 0, se suprimen casi todas las oscilaciones.\n\n\n\n\n\n","category":"type"},{"location":"iterators.html#EnKF","page":"Iterators","title":"EnKF","text":"","category":"section"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"Permite iterar un ensamble de estados aproximados, los que representan una muestra de la distribución de los estados en el tiempo indicado. Esto permite generar aproximaciones con el promedio y la covarianza muestral de los datos.","category":"page"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"KalmanFilter.EnKF","category":"page"},{"location":"iterators.html#KalmanFilter.EnKF","page":"Iterators","title":"KalmanFilter.EnKF","text":"KalmanIterator que permite aproximar un estado mediante la técnica Ensemble Kalman Filter.\n\nn::Int64\nNúmero de iteración actual n. Se inicializa en 0.\nN::Int64\nTamaño del ensamble N, cantidad de estimaciones que se trabajarán.\nu::Real\nControl u_n-1 usado para llegar al estado actual\nsystem::KalmanFilter.ObservableSystem\nSistema\nstates_hatx::Any\nArray de aproximaciones  hatx^(i)_nn _i del estado real x_n.\nstates_next_hatx::Any\nArray de estimaciones  hatx^(i)_nn-1 _i del estado real x_n, antes de conocer la observación y_n (solo contando con información hasta y_n-1).\n\nkalman_gain::AbstractArray\nMatriz de ganancia de Kalman K_n\nupdater::KalmanFilter.KalmanUpdater\nKalmanUpdater que permite actualizar tanto el estado interno como las aproximaciones. No es necesario usar un updater linealizable, aunque sea NL.\n\nobserver::KalmanFilter.LinearObserver\nUn observador lineal que entrega observaciones y_n del estado real.\n\nnoiser::Distributions.Distribution{Distributions.Univariate,S} where S<:Distributions.ValueSupport\nUna distribución que permite agregar ruido al sistema. Por defecto es una normal mathcalN(01).\n\n\n\n\n\n","category":"type"},{"location":"iterators.html","page":"Iterators","title":"Iterators","text":"danger: Atención\nHasta ahora es necesario que el usuario cuide que las condiciones iniciales estén correctamente inicializadas tanto en KalmanObserver (para el caso en que se guarda un sistema interno) y para KalmanUpdater (importa en la linearización inicial de un sistema no lineal).","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"EditURL = \"<unknown>/../modelo_seii_enkf.jl\"","category":"page"},{"location":"ejemplos/NLFilterENKF.html#Filtro-de-Kalman-por-ensambles","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"","category":"section"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"using Random, Distributions\nusing KalmanFilter\nusing Plots","category":"page"},{"location":"ejemplos/NLFilterENKF.html#Modelo-epidemiológico-SEII","page":"Filtro de Kalman por ensambles","title":"Modelo epidemiológico SEII","text":"","category":"section"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"El modelo permite modelar el desarrollo de una enfermedad regida por la siguiente dinámica:","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"beginaligned\nS = - alpha(t) S (E + I^m) \nE = alpha(t) S (E + I^m) - gamma_E E \n(I^m) = (1-varphi) gamma_E E - gamma_I I^m \nI = varphi gamma_E E - gamma_I I\n(cI) = varphi gamma_E E\nendaligned","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"donde","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"S representa a los susceptibles, las personas que podrían contagiarse.\nE corresponde a los que han sido expuestos al virus y lo están incubando.\nI^m denota a los infectados mild, que tienen síntomas leves o ninguno.\nI denota a los infectados sintomáticos.\ncI es el total de infectados sintomáticos acumulados (agregamos este valor porque es un dato con el que se cuenta del sistema real).","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Además la dinámica tiene los siguientes parámetros:","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"alpha(t) es la Tasa de contagio en tiempo t.\ngamma_E es Tasa de infección (paso de expuesto a infectado).\ngamma_I es la Tasa de remoción (dejar de estar infectado, ya sea por recuperación o muerte).\nvarphi es Proporción de personas sintomáticas.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Denotando mathbfx(t) = (S(t) E I^m I cI), el sistema es de la forma","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"mathbfx(t) = f(mathbfx(t) alpha(t) p)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"donde alpha(t) será un control y p representa a los otros parámetros. Guardamos la información de la dinámica en la función episystem_full(x, α, p).","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"function episystem_full(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α * β * x[1] * (x[2] + x[3]),\n  α * β * x[1] * (x[2] + x[3]) - γₑ * x[2],\n  (1 - φ) * γₑ * x[2] - γᵢ * x[3],\n  φ * γₑ * x[2] - γᵢ * x[4],\n  φ * γₑ * x[2]]\nend","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Vemos que este sistema es no lineal, por lo que para poder trabajarlo con el filtro de Kalman necesitaremos linearizarlo. Para eso será necesaria la información","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"D_x f(mathbfx alpha(t) p) =","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"function epijacobian_full_x(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α*β*(x[2] + x[3])  -α*β*x[1]     -α*β*x[1]  0.  0.;\n  α*β*(x[2] + x[3])  (α*β*x[1]-γₑ)  α*β*x[1]  0.  0.;\n  0.                 (1-φ)*γₑ       -γᵢ       0.  0.;\n  0.                 φ*γₑ           0.        -γᵢ 0.;\n  0.                 φ*γₑ           0.        0.  0.]\nend","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Puesto que consideraremos el input como desconocido, y la dinámica f es no lineal en ese input, también necesitaremos D_u f.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"function epijacobian_full_u(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-β*x[1]*(x[2] + x[3]),\n  β*x[1]*(x[2] + x[3]),\n  0.,\n  0.,\n  0.]\nend\n\n\n\n\"\"\"\nPermite generar una muestra de condiciones iniciales ``x_{0}^{(1)}, \\\\dots, x_{0}^{(N)} ``\n\nGenera una muestra a partir de un vector ``x0 = (S_0, E_0, I^m_0, I_0, cI_0)``. Los\nelementos de la muestra suman la misma cantidad de personas. La muestra se obtiene\ngenerando valores al azar que distribuyen ``\\\\mathcal{N}(E_0, \\\\beta E_0)``.\n- `x0`: ``x_0``\n- `factor`: ``\\\\beta``\n- `N`: Cantidad de muestras ``N``.\n\"\"\"\nfunction get_initial_states(x0, factor, N, a0,unknowninput = false)\n    total = sum(x0)\n    expuestos_base = x0[2]\n    expuestos = rand(Normal(expuestos_base, expuestos_base * factor), N)\n    susceptibles = total .- expuestos\n    if unknowninput\n        states = [[susceptibles[i], expuestos[i], 0., 0., 0., rand(Normal(a0, factor * a₀ ))] for i in 1:N]\n    else\n        states = [[susceptibles[i], expuestos[i], 0., 0., 0.] for i in 1:N]\n    end\n    states\nend","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Definimos un vector de condiciones iniciales x_0.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"x0 = [7.112808e6, 1046.8508799517147, 0.0, 521.963080420307, 0.0]\nF = 50000. * ones(5)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Solo consideraremos conocida la cantidad total de infectados mathbfx_5 = cI.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"H = [0. 0. 0. 0. 1.]","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Usaremos un error de unas 50.000 personas en las mediciones.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"G = [5e6]\ndimensions = 5","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Definimos las matrices tildeH para nuestro sistema auxiliar, que incluirá al input.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"tildeH = [H 0.]\n\ntildeP = [F * F' zeros(5); zeros(5)' 1.]\n\ndt = 0.05\nT = 50.\nN = Int(T/dt)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Definimos los parámetros","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"γₑ = 0.14\nγᵢ = 1/14\nφ = 0.3","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Que agrupamos en una tupla p.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"p = (gammae = γₑ, gammai = γᵢ, phi = φ)\n\n\na₀ = 1.; Fₐ = 1.5","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"EL nuevo vector de estados será tildemathbfx = beginpmatrix mathbfx_0  1 endpmatrix, donde estamos considerando una suposición inicial para el estado alpha = 1.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"tildex0 = [x0; a₀]\n\n\nrkx = KalmanFilter.RK4Dx(episystem_full, epijacobian_full_x, p, dt)\nrk = KalmanFilter.RK4Du(rkx, epijacobian_full_u)\n\nnlupdater = NLUpdater(rk,F,x0,a₀)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"El control para el sistema interno (que supondremos desconocido y es el que intentaremos averiguar) será la función constante por pedazos control_pieces.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"function control_pieces(t)\n    if t < 5.\n        1.\n    elseif t >= 5. && t < 12.\n        0.8\n    elseif t >= 12. && t < 25.\n        0.5\n    elseif t >= 25. && t < 40.\n        1.5\n    elseif t >= 40.\n        1.\n    end\nend","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Veamos un gráfico del control usado, para lo que definimos un vector con los tiempos ts.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"ts = 0.0:dt:(T-dt)\nplot(ts, control_pieces.(ts), label = \"Control real\")\n\n\n#nlaugmented = KalmanFilter.NLUpdaterUnknowInput(nlupdater, control_pieces, Fₐ)\nobserver = KalmanFilter.LinearObserver(H, zeros(1), G)\n#observer = KalmanFilter.LinearObserver(tildeH, zeros(1), G, tildex0)\n\nensemble_size = 50\nstates = get_initial_states(x0, 1.5, ensemble_size, a₀, false)\nsystem = KalmanFilter.InnerState(x0)\nenkf = KalmanFilter.EnKF(states, nlupdater, observer, system, dt)\n\nresults, ensamble = KalmanFilter.full_iteration(enkf, dt, N, control_pieces, ensemble_size)\n#Juno.@enter KalmanFilter.full_iteration(enkf, dt, N, control_pieces)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Susceptibles S","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"plot(ensamble, ts, 1, ylims = (0, 7.5e6))\nplot!(results, ts, 1)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Expuestos E","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"plot(ensamble, ts, 2)\nplot!(results, ts, 2, ylims = (0, 2.8e6))","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Infectados asintomáticos mild I^m","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"plot(ensamble, ts, 3)\nplot!(results, ts, 3)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Infectados I","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"plot(ensamble, ts, 4)\nplot!(results, ts, 4)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Infectados acumulados cI, y las observaciones que hicimos de él.","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"plot(ensamble, ts, 5)\nplot!(results, ts, 5)","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"Control","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"#=\nplot(ts, control_pieces.(ts), label = \"Control real\")\nplot!(results, ts, 6)\nplot!(ensamble, ts, 6)=#","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"","category":"page"},{"location":"ejemplos/NLFilterENKF.html","page":"Filtro de Kalman por ensambles","title":"Filtro de Kalman por ensambles","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"CurrentModule = KalmanFilter\r\nDocTestSetup = quote\r\n    using KalmanFilter\r\nend","category":"page"},{"location":"index.html#KalmanFilter:-Un-paquete-que-hice-por-mi-tesis-y-que-nadie-usará-además-de-mí","page":"KalmanFilter.jl","title":"KalmanFilter: Un paquete que hice por mi tesis y que nadie usará además de mí","text":"","category":"section"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Estoy probando a crear documentación.","category":"page"},{"location":"index.html#Filtro-de-Kalman","page":"KalmanFilter.jl","title":"Filtro de Kalman","text":"","category":"section"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Filtro de Kalman es un método poderoso para estimar un estado a partir de observaciones de este. ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Supongamos que contamos con un sistema ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"x_n+1 = M_n x_n + B_n u_n + F_n N_n","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Donde N_n son variables aleatorias normales, N_n sim mathcalN(01). Suponemos además que este sistema es desconocido, y que solo podemos obtener observaciones y_n de él.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"y_n = H_n x_n + D_n u_n + G_n N_n ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"El filtro de Kalman es un método para construir una estimación filtrada hatx_n del estado real x_n, a partir de las observaciones y_n y suponiendo que el control u_n es conocido. ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Una iteración del filtro de Kalman se puede dividir en dos pasos: ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Un paso de forecast, donde hacemos un suposición a priori de dónde estará el estado real en la próxima iteración a partir de la dinámica y nuestra estimación actual.\nUna vez que recibimos la observación proveniente del estado real, hacemos un paso de análisis donde incorporamos esa información para obtener una estimación a posteriori.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Hablando en términos más matemáticos, nuestro objetivo es obtener, en cada paso n = 1 2 dots, la distribución filtrada del estado; buscamos la distribución a posteriori de x_n dadas las observaciones y_1 dots y_n hasta la iteración n.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"AGREGAR FORMULAS DE KALMAN. ","category":"page"},{"location":"index.html#Filtro-de-Kalman-por-ensambles","page":"KalmanFilter.jl","title":"Filtro de Kalman por ensambles","text":"","category":"section"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Ver [Katzfussa], la descripción está tomada de ahí.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"El filtro de Kalman por ensambles (EnKF por su nombre en inglés Ensemble Kalman Filter), es una versión aproximada del filtro de Kalman, donde la distrubución del estado se representa con una muestra o \"ensamble\" de esa distribución . ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Más específicamente, suponemos que hatx^(1)_nn dots hatx^(N)_nn es una muestra de la distribución filtrada en tiempo n, es decir, que hatx^(i)_nn sim mathcalN(hatx_nn hatP_nn). ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Al igual que con el filtro de Kalman, una iteración de EnKF también se hará en un paso de forecast y un paso de análisis. ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Durante el forecast, nuestra distribución a priori será ","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"hatx^(i)_n+1n = f_n(hatx^(i)_nn u_n w^(i)_n)","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"con w^(i)_n sim mathcalN(0Q_n). Para el caso lineal en que f_n(x u w) = M_n x + B_n u + w se puede verificar que hatx^(i)_n+1n sim mathcalN(mu Sigma) (COMPLETAR).","category":"page"},{"location":"index.html#Recursos-adicionales","page":"KalmanFilter.jl","title":"Recursos adicionales","text":"","category":"section"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"KalmanFilter.NET contiene explicaciones y tutoriales.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Un libro más matemático es  Optimal Filtering de Brian Anderson y John Moore.","category":"page"},{"location":"index.html","page":"KalmanFilter.jl","title":"KalmanFilter.jl","text":"Katzfussa, Stroudb, Wiklec, \"Understanding the Ensemble Kalman Filter\"","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"EditURL = \"<unknown>/../modelo_seii_filtro_extendido.jl\"","category":"page"},{"location":"ejemplos/NLFilter.html#Filtro-de-Kalman-Extendido","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"","category":"section"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"using KalmanFilter\nusing Plots","category":"page"},{"location":"ejemplos/NLFilter.html#Modelo-epidemiológico-SEII","page":"Filtro de Kalman Extendido","title":"Modelo epidemiológico SEII","text":"","category":"section"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"El modelo permite modelar el desarrollo de una enfermedad regida por la siguiente dinámica:","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"beginaligned\nS = - alpha(t) S (E + I^m) \nE = alpha(t) S (E + I^m) - gamma_E E \n(I^m) = (1-varphi) gamma_E E - gamma_I I^m \nI = varphi gamma_E E - gamma_I I\n(cI) = varphi gamma_E E\nendaligned","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"donde","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"S representa a los susceptibles, las personas que podrían contagiarse.\nE corresponde a los que han sido expuestos al virus y lo están incubando.\nI^m denota a los infectados mild, que tienen síntomas leves o ninguno.\nI denota a los infectados sintomáticos.\ncI es el total de infectados sintomáticos acumulados (agregamos este valor porque es un dato con el que se cuenta del sistema real).","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Además la dinámica tiene los siguientes parámetros:","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"alpha(t) es la Tasa de contagio en tiempo t.\ngamma_E es Tasa de infección (paso de expuesto a infectado).\ngamma_I es la Tasa de remoción (dejar de estar infectado, ya sea por recuperación o muerte).\nvarphi es Proporción de personas sintomáticas.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Denotando mathbfx(t) = (S(t) E I^m I cI), el sistema es de la forma","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"mathbfx(t) = f(mathbfx(t) alpha(t) p)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"donde alpha(t) será un control y p representa a los otros parámetros. Guardamos la información de la dinámica en la función episystem_full(x, α, p).","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"function episystem_full(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α * β * x[1] * (x[2] + x[3]),\n  α * β * x[1] * (x[2] + x[3]) - γₑ * x[2],\n  (1 - φ) * γₑ * x[2] - γᵢ * x[3],\n  φ * γₑ * x[2] - γᵢ * x[4],\n  φ * γₑ * x[2]]\nend","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Vemos que este sistema es no lineal, por lo que para poder trabajarlo con el filtro de Kalman necesitaremos linearizarlo. Para eso será necesaria la información","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"D_x f(mathbfx alpha(t) p) =","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"function epijacobian_full_x(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-α*β*(x[2] + x[3])  -α*β*x[1]     -α*β*x[1]  0.  0.;\n  α*β*(x[2] + x[3])  (α*β*x[1]-γₑ)  α*β*x[1]  0.  0.;\n  0.                 (1-φ)*γₑ       -γᵢ       0.  0.;\n  0.                 φ*γₑ           0.        -γᵢ 0.;\n  0.                 φ*γₑ           0.        0.  0.]\nend","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Puesto que consideraremos el input como desconocido, y la dinámica f es no lineal en ese input, también necesitaremos D_u f.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"function epijacobian_full_u(x, α, p)\n  γᵢ = p.gammai; γₑ = p.gammae; φ = p.phi;\n  β = 1e-7\n  [-β*x[1]*(x[2] + x[3]),\n  β*x[1]*(x[2] + x[3]),\n  0.,\n  0.,\n  0.]\nend","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Definimos un vector de condiciones iniciales x_0.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"x0 = [7.112808e6, 1046.8508799517147, 0.0, 521.963080420307, 0.0]\nF = 50000. * ones(5)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Solo consideraremos conocida la cantidad total de infectados mathbfx_5 = cI.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"H = [0. 0. 0. 0. 1.]","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Usaremos un error de unas 50.000 personas en las mediciones.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"G = [5e6]\ndimensions = 5","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Definimos las matrices tildeH para nuestro sistema auxiliar, que incluirá al input.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"tildeH = [H 0.]\n\ntildeP = [F * F' zeros(5); zeros(5)' 1.]","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"EL nuevo vector de estados será tildemathbfx = beginpmatrix mathbfx_0  1 endpmatrix, donde estamos considerando una suposición inicial para el estado alpha = 1.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"tildex0 = [x0; 0.4]\n\ndt = 0.05\nT = 50.\nN = Int(T/dt)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Definimos los parámetros","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"γₑ = 0.14\nγᵢ = 1/14\nφ = 0.3","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Que agrupamos en una tupla p.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"p = (gammae = γₑ, gammai = γᵢ, phi = φ)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Usaremos un Discretizer RungeKutta de orden 4, diferenciable tanto en el estado x como en el control u. Lo construimos a partir de un discretizador solo diferenciable en x por comodidad.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"rkx = KalmanFilter.RK4Dx(episystem_full, epijacobian_full_x, p, dt)\nrk = KalmanFilter.RK4Du(rkx, epijacobian_full_u)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"El control para el sistema interno (que supondremos desconocido y es el que intentaremos averiguar) será la función constante por pedazos control_pieces.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"function control_pieces(t)\n    if t < 5.\n        1.\n    elseif t >= 5. && t < 12.\n        0.8\n    elseif t >= 12. && t < 25.\n        0.5\n    elseif t >= 25. && t < 40.\n        1.5\n    elseif t >= 40.\n        1.\n    end\nend","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Veamos un gráfico del control usado, para lo que definimos un vector con los tiempos ts.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"ts = 0.0:dt:(T-dt)\nplot(ts, control_pieces.(ts), label = \"Control real\")","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Definimos las estructuras necesarias para crear un LinearKalmanIterator.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"nlupdater = NLUpdater(rk,F,x0,0.4)\n#nlaugmented = KalmanFilter.NLUpdaterUnknowInput(nlupdater, control_pieces, 1.)\n#observer = KalmanFilter.LinearObserver(tildeH, zeros(1), G, tildex0)\nobserver = KalmanFilter.LinearObserver(H, zeros(1), G)\nsystem = KalmanFilter.InnerState(x0)\niterator = KalmanFilter.LinearKalmanIterator(x0, F * F', nlupdater, observer, system, dt)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Y realizamos un total de N iteraciones, guardando los estamos intermedios en las variables que aparecen abajo.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"results, ensamble = KalmanFilter.full_iteration(iterator, dt, N, control_pieces, 1)","category":"page"},{"location":"ejemplos/NLFilter.html#Resultados","page":"Filtro de Kalman Extendido","title":"Resultados","text":"","category":"section"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Graficaremos los estados internos considerados, y los resultados obtenidos.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Ahora podemos graficar los diferentes estados de nuestro sistema, así como las aproximaciones obtenidas con filtro de Kalman.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Susceptibles S","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"plot(results, ts, 1, ylims = (0, 7.5e6))","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Expuestos E","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"plot(results, ts, 2, ylims = (0, 2.8e6))","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Infectados asintomáticos mild I^m","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"plot(results, ts, 3)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Infectados I","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"plot(results, ts, 4)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Infectados acumulados cI, y las observaciones que hicimos de él.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"plot(results, ts, 5)","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"Notamos que tras una cierta cantidad de tiempo es posible averiguar el control Aunque hay bastante incerteza de los resultados.","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"","category":"page"},{"location":"ejemplos/NLFilter.html","page":"Filtro de Kalman Extendido","title":"Filtro de Kalman Extendido","text":"This page was generated using Literate.jl.","category":"page"}]
}
